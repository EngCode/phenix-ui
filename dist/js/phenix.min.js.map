{"version":3,"file":"phenix.min.js","mappings":"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","sources":["webpack://Phenix/./src/scripts/custom-scripts.ts","webpack://Phenix/./src/scripts/features/counter.ts","webpack://Phenix/./src/scripts/features/effects.ts","webpack://Phenix/./src/scripts/features/get-info.ts","webpack://Phenix/./src/scripts/index.ts","webpack://Phenix/./src/scripts/integration/wordpress.ts","webpack://Phenix/webpack/bootstrap","webpack://Phenix/webpack/startup"],"sourcesContent":["/*===================================\r\n=                                   =\r\n=  - !Hello There                   =\r\n=  - this is Your working space     =\r\n=  - here you can customize phenix  =\r\n=  - to your app ui design needs    =\r\n=  - Good Luck :)                   =\r\n=                                   =\r\n===================================*/\r\n\r\n/*====> Import Phenix <====*/\r\nimport Phenix from '.';\r\n\r\n//======> D.O.M is Ready [for you] <=======//\r\nPhenix(document).ready((event:any) => {\r\n    //====> !Here Goes Your Code <====//\r\n    Phenix('.test-btn').on('click', event => {\r\n        //====> ... <====//\r\n        let testing = Phenix('#counter-test').counter({countDown: true});\r\n        console.log(testing);\r\n    });\r\n});","/**======> Referance By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Animated Counter\r\n * ===> 03 - Get Options Data\r\n * ===> 04 - Counter Data\r\n * ===> 05 - Count Runer\r\n * ===> 06 - Start Counting\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Animated Counter <====*/\r\nPhenixElements.prototype.counter = function (options?:{\r\n        value?:number,\r\n        duration?:number,\r\n        delay?:number,\r\n        decimal?:number,\r\n        symbol?:string,\r\n        steps?:number,\r\n        countDown?:boolean\r\n    }) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:any) => {\r\n        //====> Get Options Data <====//\r\n        let duration = options?.duration || element.getAttribute('data-duration') ||  2000,\r\n            decimal  = options?.decimal  || parseInt(element.getAttribute('data-decimal')) ||  0,\r\n            value    = options?.value    || parseInt(element.getAttribute('data-counter') || element.innerText) ||  0,\r\n            symbol   = options?.symbol || element.getAttribute('data-symbol') ||  '',\r\n            delay    = options?.delay  || parseInt(element.getAttribute('data-delay')) ||  0,\r\n            steps    = options?.steps  || parseInt(element.getAttribute('data-steps')) ||  10;\r\n\r\n        //====> Counter Data <===//\r\n        let input = (element.nodeName.toLowerCase() === 'input') ? true : false,\r\n            count = 0,\r\n            increment = value / (duration / steps),\r\n            interval = null,\r\n            regex = /\\B(?=(\\d{3})+(?!\\d))/g;\r\n\r\n        //====> Switch Count for Counting Down <====//\r\n        if (options?.countDown) count = value;\r\n    \r\n        //====> Count Runer <===//\r\n        const runCounter = () => {\r\n            //===> if [Count Down] is Activated => Decrease the Count <===//\r\n            if (options?.countDown) count -= increment;\r\n            //===> Otherwise Increase the Count <===//\r\n            else count += increment;\r\n\r\n            //===> Current Value <===//\r\n            let current = `${(count).toFixed(decimal).toString().replace(regex, ',')+symbol}`;\r\n\r\n            //===> if the Element is Input Control <===//\r\n            if (input) element.value = current;\r\n            //===> Otherwise <===//\r\n            else element.innerHTML = current;\r\n\r\n            //===> Clear When Count Up Reaches The Target <===//\r\n            if (!options?.countDown && count === value) clearInterval(interval);\r\n\r\n            //===> Clear When Count Down Reaches Zero <===//\r\n            else if (options?.countDown && count === 0) clearInterval(interval);\r\n        };\r\n    \r\n        //====> Start Counting <===//\r\n        setTimeout(function() {\r\n            interval = setInterval(runCounter.bind(this), steps);\r\n        }.bind(this), delay);\r\n    });\r\n    \r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}","/**======> Referance By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Effects : SlideUp\r\n * ===> 03 - Effects : SlideDown\r\n * ===> 04 - Effects : SlideToggle\r\n * ===> 05 - Effects : FadeOut\r\n * ===> 06 - Effects : FadeIn\r\n * ===> 07 - Effects : FadeToggle\r\n * ===> 00 - ....\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Effects : SlideUp <====*/\r\nPhenixElements.prototype.slideUp = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display !== 'none') {\r\n            //====> Set Animation Base Properties <====//\r\n            Phenix(element).css({\"overflow\" : 'hidden'});\r\n\r\n            //====> Animation Data <====//\r\n            let height = Phenix(element).height(),\r\n                timespeed = duration || 300,\r\n                keyframes = [\r\n                    //====> From <====//\r\n                    {height: `${height}px`},\r\n                    //====> To <====//\r\n                    {height : 0, padding: 0, margin : 0}\r\n                ];\r\n\r\n            //====> Slide-Up the Element <====//\r\n            element.animate(keyframes, {\r\n                duration : timespeed,\r\n                easing   : 'linear',\r\n                fill     : 'forwards',\r\n                delay    : delay || 0,\r\n            });\r\n\r\n            //====> After Animation : Hide the Element <====//\r\n            window.setTimeout(() => Phenix(element).css({\"display\" : 'none'}, true), timespeed);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Effects : SlideDown <====*/\r\nPhenixElements.prototype.slideDown = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element <====//\r\n            Phenix(element).css({\r\n                \"overflow\" : 'hidden',\r\n                \"display\"  : display || 'block',\r\n            });\r\n\r\n            //====> Animation Data <====//\r\n            let height = Phenix(element).height(),\r\n                timespeed = duration || 300,\r\n                keyframes = [\r\n                    //====> From <====//\r\n                    {height : 0},\r\n                    //====> To <====//\r\n                    {height: `${height}px`},\r\n                ];\r\n\r\n            //====> Slide-Up the Element <====//\r\n            element.animate(keyframes, {\r\n                duration: timespeed,\r\n                easing  : 'linear',\r\n                fill    : 'forwards',\r\n                delay   : delay || 0,\r\n            });\r\n\r\n            //====> After Animation : Clear Overflow <====//\r\n            window.setTimeout(() => element.style.overflow = null, timespeed);\r\n        }\r\n    });\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Effects : SlideToggle <====*/\r\nPhenixElements.prototype.slideToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).slideDown(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).slideUp(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Effects : FadeOut <====*/\r\nPhenixElements.prototype.fadeOut = function (duration?, delay?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display !== 'none') {\r\n            //====> Animation Data <====//\r\n            let timespeed = duration || 300,\r\n                keyframes = [{opacity: 1}, {opacity : 0}];\r\n\r\n            //====> Slide-Up the Element <====//\r\n            element.animate(keyframes, {\r\n                duration : timespeed,\r\n                easing   : 'linear',\r\n                fill     : 'forwards',\r\n                delay    : delay || 0,\r\n            });\r\n\r\n            //====> After Animation : Hide the Element & Clear inline-style <====//\r\n            window.setTimeout(() => Phenix(element).css({\"display\" : 'none'}, true), timespeed);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Effects : FadeIn <====*/\r\nPhenixElements.prototype.fadeIn = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Visible <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            //====> Show the Element <====//\r\n            Phenix(element).css({\"display\" : display || 'block'});\r\n\r\n            //====> Animation Data <====//\r\n            let timespeed = duration || 300,\r\n                keyframes = [{opacity: 0}, {opacity : 1}];\r\n\r\n            //====> Slide-Up the Element <====//\r\n            element.animate(keyframes, {\r\n                duration : timespeed,\r\n                easing   : 'linear',\r\n                fill     : 'forwards',\r\n                delay    : delay || 0,\r\n            });\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n\r\n/*====> Effects : FadeToggle <====*/\r\nPhenixElements.prototype.fadeToggle = function (duration?, delay?, display?) {\r\n    //====> Loop Through Phenix Elements <====//\r\n    this.forEach((element:HTMLElement) => {\r\n        //====> if the target is Hidden <====//\r\n        if (getComputedStyle(element).display === 'none') {\r\n            Phenix(element).fadeIn(duration, delay, display);\r\n        }\r\n        //====> if the target is Visible <====//\r\n        else {\r\n            Phenix(element).fadeOut(duration, delay);\r\n        }\r\n    });\r\n\r\n    //====> Return Phenix Elements <====//\r\n    return this;\r\n}\r\n","/**======> Referance By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Get Information Class\r\n * ===> 03 - Page Direction\r\n * ===> 04 - Get Element Height\r\n * ===> 05 - ViewPort Detactor\r\n * ===> 06 - Get CSS Properties Value\r\n * ===> 07 - Get Viewport Dimensions\r\n * ===> 00 - ....\r\n * ===> 00 - ....\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nimport Phenix, { PhenixElements } from \"..\";\r\n\r\n/*====> Page Direction <====*/\r\nPhenixElements.prototype.direction = function (property?:string) {\r\n    //======> Default Directions <======//\r\n    let direction  = getComputedStyle(document.body).direction,\r\n        directionStart = 'left',\r\n        directionEnd   = 'right';\r\n\r\n    //======> Change Directions if RTL <======//\r\n    if (direction === 'rtl') {\r\n        directionStart = 'right';\r\n        directionEnd = 'left';\r\n    }\r\n\r\n    //======> Return Property Value <======//\r\n    if (property == \"start\") {\r\n        return directionStart;\r\n\r\n    } else if (property == \"end\") {\r\n        return directionEnd;\r\n\r\n    } else {\r\n        return direction;\r\n    }\r\n}\r\n\r\n/*====> Get Element Height <====*/\r\nPhenixElements.prototype.height = function () {\r\n    //======> Define Target Data <======//\r\n    let element:any = this[0],\r\n        display = getComputedStyle(element).display;\r\n\r\n    //======> for Getting the Height of a Hidden Element <=======//\r\n    if (display == 'none') element.style.display = 'block';\r\n\r\n    //======> Define Height Data <=======//\r\n    let height = element.scrollHeight,\r\n        padding = parseInt(getComputedStyle(element).padding, 10) || 0;\r\n\r\n    if (display === 'none') element.style.display = 'none';\r\n\r\n    return height + padding;\r\n}\r\n\r\n/*====> Get CSS Properties Value <====*/\r\nPhenixElements.prototype.getCSS = function(property?:string, pseudo?:string) {\r\n    //======> Define the Target <======//\r\n    let element:any = this[0];\r\n\r\n    //====> Get the Target Style <====//\r\n    let styles = getComputedStyle(element, pseudo);\r\n\r\n    //====> If Property is Targeted <====//\r\n    if (property) styles = styles[property];\r\n\r\n    //====> Return Informations <====//\r\n    return styles;\r\n}\r\n\r\n/*====> ViewPort Detactor [Update Need] <====*/\r\nPhenixElements.prototype.inView = function () {\r\n    //======> Define Target Data <======//\r\n    let element:any = this[0],\r\n        scrollPosition = window.scrollY || window.pageYOffset,\r\n        boundsTop = element.getBoundingClientRect().top + scrollPosition,\r\n        viewport = {top: scrollPosition,bottom: scrollPosition + window.innerHeight},\r\n        bounds = {top: boundsTop, bottom: boundsTop + element.clientHeight};\r\n\r\n    //====== if its visible return [true] =====//\r\n    return bounds.bottom >= viewport.top && bounds.bottom <= viewport.bottom || bounds.top <= viewport.bottom && bounds.top >= viewport.top ? true : false;\r\n}\r\n\r\n//=====> Get Viewport Dimensions <=====//\r\nPhenixElements.prototype.viewport = function (property:string) {\r\n    //====> Get Document Element <HTML> <====//\r\n    let element = document.documentElement;\r\n\r\n    //====> if the Target is width <====//\r\n    if (property === 'width') Math.max(element.clientWidth || 0, window.innerWidth || 0);\r\n    \r\n    //====> if the Target is width <====//\r\n    else if (property === 'height') Math.max(element.clientHeight || 0, window.innerHeight || 0);\r\n}\r\n","/**======> Referance By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - D.O.M Ready\r\n * ===> 03 - Add Class\r\n * ===> 04 - Remove Class\r\n * ===> 05 - Toggle Class\r\n * ===> 07 - Event Handler\r\n * ===> 08 - Get Ancestor [Parent, Parents Until]\r\n * ===> 09 - Get Siblings\r\n * ===> 10 - Get Next Siblings\r\n * ===> 11 - Get Previous Siblings\r\n * ===> 12 - CSS Styling\r\n * ===> 16 - Set Mutliple Attributes\r\n * ===> 17 - Insert Elements\r\n * ===> .. - \r\n * ===> .. - Define Info Grapers\r\n * ===> .. - Define UI Effects\r\n * ===> .. - Define Other Features\r\n * ===> .. - \r\n * ===> 00 - Phenix Selecting Method\r\n * ===> 00 - Include Features\r\n * ===> 00 - Integration\r\n * ===> 00 - Your Custom Script [JS]\r\n*/\r\n\r\n/*====> Phenix Object <====*/\r\nexport class PhenixElements extends Array<HTMLElement | Object | 'object'> {\r\n    /*====> D.O.M Ready <====*/\r\n    ready(callback:any) {\r\n        //====> Check if its Ready <====//\r\n        if (document.readyState == 'complete') callback;\r\n\r\n        //====> Wait for It to be Ready <====//\r\n        else document.addEventListener('DOMContentLoaded', callback);\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Add Class <====*/\r\n    addClass(className:string) {\r\n        //====> Add Class for Each Element <====//\r\n        this.forEach((element:HTMLElement) => element.classList.add(className));\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Remove Class <====*/\r\n    removeClass(className:string) {\r\n        //====> Add Class for Each Element <====//\r\n        this.forEach((element:HTMLElement) => element.classList.remove(className));\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Toggle Class <====*/\r\n    toggleClass(className:string) {\r\n        //====> Toggle Class for Each Element <====//\r\n        this.forEach((element:HTMLElement) => element.classList.toggle(className));\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Event Handler [Live Error] <====*/\r\n    on(event, callback, live?, timer?) {\r\n        //====> Attache a Normal Event <====//\r\n        if (!live) {\r\n            //====> Event for Each Element <====//\r\n            this.forEach((element:HTMLElement) => element.addEventListener(event, callback));\r\n\r\n            //====> Return Phenix Elements <====//\r\n            return this;\r\n\r\n        //====> Live Event [Wrong :: Error] <====//\r\n        } else {\r\n            //====> Create Time Loop <====//\r\n            let timerLoop = setInterval(() => {\r\n                //====> Attach Event for Each Time <====//\r\n                this.forEach((element:HTMLElement) => element.addEventListener(event, callback));\r\n            }, timer|1000);\r\n\r\n            //====> Return the Elements & Time Loop <====//\r\n            return {\r\n                elements: this,\r\n                timeLoop: timerLoop\r\n            };\r\n        }\r\n    }\r\n\r\n    /*====> Get Ancestor [Parent, Parents Until] <====*/\r\n    ancestor(target?) {\r\n        //====> Define Ancestor Arrays <====//\r\n        let ancestors = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Define The First Parent <====//\r\n            let parent:any = element.parentNode;\r\n            \r\n            //====> if has a Target <===//\r\n            if (target) {\r\n                //====> Loop Over The Ancestors <====//\r\n                while (parent) {\r\n                    //====> When the Target has been Found Return it <====//\r\n                    if (!element.matches('html') && parent.matches(target)) {\r\n                        ancestors.push(parent);\r\n                        break;\r\n                    }\r\n                    //====> Otherwise get the Next Ancestor <====//\r\n                    else parent = parent.parentNode;\r\n                }\r\n            }\r\n\r\n            //====> Otherwise Return the Parent <====//\r\n            else ancestors.push(parent);\r\n        });\r\n\r\n        //====> Return Ancestors <====//\r\n        if (ancestors.length > 1) return ancestors;\r\n        else if (ancestors.length === 1) return ancestors[0];\r\n    }\r\n\r\n    /*====> Get Siblings <====*/\r\n    siblings(target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> if No target [Return All Sibling] <====//\r\n            if (!target) {\r\n                //====> Filter and Exclude the Current Element <====//\r\n                Array.from(element.parentNode.children).forEach((child:HTMLElement) => {\r\n                    if (child !== element) siblings.push(child);\r\n                });\r\n            }\r\n\r\n            //====> if have Target <====//\r\n            else {\r\n                //====> Filter and Catch only the matched targets <====//\r\n                Array.from(element.parentNode.children).forEach((child:HTMLElement) => {\r\n                    if (child !== element && child.matches(target)) siblings.push(child);\r\n                });\r\n            }\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        return siblings.length > 0 ? siblings : null;\r\n    }\r\n\r\n    /*====> Get Next Siblings <====*/\r\n    next(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Next Unit <====//\r\n            let nextUnit = element.nextElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Next Sibling] <====//\r\n            if (!target) siblings.push(nextUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Next is the Target <====//\r\n                if (target.includes('all', 0)) {\r\n                    //====> Loop Through All Next Siblings <====//\r\n                    while (nextUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && nextUnit.matches(all_target)) siblings.push(nextUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(nextUnit);\r\n    \r\n                        //====> get the next one <====//\r\n                        nextUnit = nextUnit.nextElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Next Matched Target [Next Until] <====//\r\n                else {\r\n                    //====> While there is a Next Unit <====//\r\n                    while (nextUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (nextUnit.matches(target)) {\r\n                            siblings.push(nextUnit);\r\n                            break;\r\n                        } else {\r\n                            nextUnit = nextUnit.nextElementSibling;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        //====> Return Siblings <====//\r\n        if (siblings.length > 1) return siblings;\r\n        else if (siblings.length === 1) return siblings[0];\r\n    }\r\n\r\n    /*====> Get Previous Siblings <====*/\r\n    prev(target?, all_target?) {\r\n        //====> Sibling Define <====//\r\n        let siblings = [];\r\n        \r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:any) => {\r\n            //====> Define Previous Unit <====//\r\n            let prevUnit = element.previousElementSibling;\r\n    \r\n            //====> if No target [Return the Direct Previous Sibling] <====//\r\n            if (!target) siblings.push(prevUnit);\r\n    \r\n            //====> if Target is Detected <====//\r\n            if (target) {\r\n                //====> if All Previous is the Target <====//\r\n                if (target.includes('all', 0)) {\r\n                    //====> Loop Through All Previous Siblings <====//\r\n                    while (prevUnit) {\r\n                        //====> if All has Target & Matches this Unit <====//\r\n                        if (all_target && prevUnit.matches(all_target)) siblings.push(prevUnit);\r\n    \r\n                        //====> if All has no Target get this Unit <====//\r\n                        if (!all_target) siblings.push(prevUnit);\r\n    \r\n                        //====> get the previous one <====//\r\n                        prevUnit = prevUnit.previousElementSibling;\r\n                    }\r\n                }\r\n    \r\n                //====> Otherwise get the Previous Matched Target [Previous Until] <====//\r\n                else {\r\n                    //====> While there is a Previous Unit <====//\r\n                    while (prevUnit) {\r\n                        //====> Check for the Target & Return it <====//\r\n                        if (prevUnit.matches(target)) {\r\n                            siblings.push(prevUnit);\r\n                            break;\r\n                        } else {\r\n                            prevUnit = prevUnit.previousElementSibling;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        \r\n        //====> Return Siblings <====//\r\n        if (siblings.length > 1) return siblings;\r\n        else if (siblings.length === 1) return siblings[0];\r\n    }\r\n\r\n    /*====> CSS Styling <====*/\r\n    css(style:object, clearInline?) {\r\n        //====> if inline-style Clear is Activated <====//\r\n        if (clearInline) this.forEach((element:HTMLElement) => (element.removeAttribute('style')));\r\n\r\n        //====> for Each CSS Property <====//\r\n        for (const [key, value] of Object.entries(style)) {\r\n            //====> Convert Property[String] To Object Name[Key] <====//\r\n            let property = key.replace(/(-[a-z])/, prop => prop.replace(\"-\", \"\").toUpperCase());\r\n\r\n            //====> Style Elements <====//\r\n            this.forEach((element:HTMLElement) => (element.style[property] = value));\r\n        }\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this\r\n    }\r\n\r\n    /*====> Set Mutliple Attributes <====*/\r\n    setAttributes(attributes:{}) {\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //====> Loop Through the Attributes <====//\r\n            Object.keys(attributes).forEach(attribute => {\r\n                //====> Set Attributes One By One <====//\r\n                element.setAttribute(attribute, attributes[attribute]);\r\n            });\r\n        });\r\n\r\n        //====> Return Phenix Elements <====//\r\n        return this;\r\n    }\r\n\r\n    /*====> Insert Elements <====*/\r\n    insert(position?:string, elementsPackage?:any) {\r\n        //====> Define the Package <====//\r\n        let new_package = [];\r\n\r\n        //====> Loop Through Phenix Elements <====//\r\n        this.forEach((element:HTMLElement) => {\r\n            //===> String Element Converter to [Node] <===//\r\n            if (typeof(elementsPackage) === 'string')\r\n                elementsPackage = document.createRange().createContextualFragment(elementsPackage);\r\n\r\n            //====> Insert After The Element <====//\r\n            if (position === 'after') {\r\n                element.parentNode.insertBefore(elementsPackage, element.nextSibling);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.nextElementSibling);\r\n            }\r\n\r\n            //====> Insert Before The Element <====//\r\n            else if (position === 'before') {\r\n                element.parentNode.insertBefore(elementsPackage, element);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.previousElementSibling);\r\n            }\r\n\r\n            //====> Insert Inside The Element at First <====//\r\n            else if (position == 'prepend') {\r\n                element.prepend(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.firstChild);\r\n            }\r\n\r\n            //====> Insert Inside The Element at Last <====//\r\n            else if (position == 'append') {\r\n                element.appendChild(elementsPackage);\r\n                //====> Include the New Element to the Package <====//\r\n                new_package.push(element.lastChild);\r\n            }\r\n        });\r\n\r\n        //====> Return the New Elements Package <====//\r\n        if (new_package.length > 1) return new_package;\r\n        else if (new_package.length === 1) return new_package[0];\r\n    }\r\n\r\n    /*====> Define Info Grapers <====*/\r\n    height; getCSS; direction;\r\n    inView; viewport;\r\n\r\n    /*====> Define UI Effects <====*/\r\n    slideUp; slideDown; slideToggle;\r\n    fadeOut; fadeIn; fadeToggle;\r\n\r\n    /*====> Define Other Features <====*/\r\n    counter;\r\n}\r\n\r\n/*====> Include Features <====*/\r\nimport './features/get-info'; //==> Info Grapers\r\nimport './features/effects';  //==> UI Effects\r\nimport './features/counter';  //==> Animated Counter\r\n\r\n/*====> Phenix Selecting Method <====*/\r\nconst Phenix = (selector:any) => {\r\n    /*====> Get Elements <====*/\r\n    if (typeof(selector) === 'string') {\r\n        //====> Select for Phenix Elements <====//\r\n        return new PhenixElements(...document.querySelectorAll<HTMLElement>(selector));\r\n\r\n    /*====> if its Elements Passed it <====*/\r\n    } else if (selector !== null && typeof(selector) !== 'undefined' || 'number') {\r\n        //====> if Not Array Make it one <====//\r\n        if (!Array.isArray(selector) || typeof(selector) !== 'object') selector = [selector];\r\n\r\n        //====> and Created as Phenix Elements <====//\r\n        return new PhenixElements(...selector);\r\n\r\n    /*====> Selecting Error <====*/\r\n    } else {\r\n        console.error('!Oobs somthing went wrong make sure your passing valid selector to Phenix.')\r\n    }\r\n}\r\n\r\nexport default Phenix;\r\n\r\n/*====> Integration <====*/\r\nimport './integration/wordpress';\r\n\r\n/*====> Custom Script <====*/\r\nimport './custom-scripts';","/**======> Referance By Comment <======\r\n * ===> 01 - Phenix Object\r\n * ===> 02 - Multi-Level Menu Builder\r\n * ===> 03 - \r\n * ===> 04 - \r\n * ===> 05 - \r\n * ===> 06 - \r\n * ===> 00 - ....\r\n * ===> 00 - Phenix Selecting Method\r\n*/\r\n\r\n/*====> Phenix JS <====*/\r\nimport Phenix from \"..\";\r\n\r\n/*====> D.O.M is Ready ? <====*/\r\nPhenix(document).ready(ready => {\r\n    /*====> Activated Items Detect <====*/\r\n    Phenix('.current-menu-parent, .current-menu-item').addClass('active');\r\n});\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(929);\n"],"names":["document","ready","event","on","testing","counter","countDown","console","log","PhenixElements","prototype","options","this","forEach","element","duration","getAttribute","decimal","parseInt","value","innerText","symbol","delay","steps","input","nodeName","toLowerCase","count","increment","interval","regex","runCounter","current","toFixed","toString","replace","innerHTML","clearInterval","setTimeout","setInterval","bind","slideUp","getComputedStyle","display","css","height","timespeed","keyframes","padding","margin","animate","easing","fill","window","slideDown","style","overflow","slideToggle","fadeOut","opacity","fadeIn","fadeToggle","direction","property","body","directionStart","directionEnd","scrollHeight","getCSS","pseudo","styles","inView","scrollPosition","scrollY","pageYOffset","boundsTop","getBoundingClientRect","top","viewport","innerHeight","bounds","clientHeight","documentElement","Math","max","clientWidth","innerWidth","Array","callback","readyState","addEventListener","addClass","className","classList","add","removeClass","remove","toggleClass","toggle","live","timer","elements","timeLoop","ancestor","target","ancestors","parent","parentNode","matches","push","length","siblings","from","children","child","next","all_target","nextUnit","nextElementSibling","includes","prev","prevUnit","previousElementSibling","clearInline","removeAttribute","key","Object","entries","prop","toUpperCase","setAttributes","attributes","keys","attribute","setAttribute","insert","position","elementsPackage","new_package","createRange","createContextualFragment","insertBefore","nextSibling","prepend","firstChild","appendChild","lastChild","selector","querySelectorAll","isArray","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__"],"sourceRoot":""}